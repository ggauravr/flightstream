name: Lerna Operations

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version type to bump'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major
      publish:
        description: 'Publish packages after versioning'
        required: false
        default: false
        type: boolean

jobs:
  version-and-publish:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npx lerna run test
      
    - name: Run linting
      run: npx lerna run lint
      
    - name: Check for changes
      id: changed
      run: |
        CHANGED=$(npx lerna changed --json)
        echo "changed=$CHANGED" >> $GITHUB_OUTPUT
        echo "Changed packages: $CHANGED"
        
    - name: Version packages
      if: steps.changed.outputs.changed != '[]'
      run: |
        npx lerna version ${{ github.event.inputs.version_type }} --yes --no-push
        echo "VERSION_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
        
    - name: Publish packages
      if: github.event.inputs.publish == 'true' && steps.changed.outputs.changed != '[]'
      run: npx lerna publish from-package --yes
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Push changes
      if: steps.changed.outputs.changed != '[]'
      run: |
        git push origin main --tags
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Create Release
      if: github.event.inputs.publish == 'true' && steps.changed.outputs.changed != '[]'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.VERSION_TAG }}
        release_name: Release ${{ env.VERSION_TAG }}
        body: |
          ## What's Changed
          
          This release includes updates to the following packages:
          
          ${{ steps.changed.outputs.changed }}
          
          ## Installation
          
          ```bash
          npm install @flightstream/core @flightstream/utils @flightstream/csv-service
          ```
        draft: false
        prerelease: false 